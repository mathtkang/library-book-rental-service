version: '3.8'

volumes:
  mysql-data: {}

services:
  mysql:
    container_name: mysql
    image: mysql:latest
    volumes:
      - mysql-data:/var/lib/mysql/data/
    ports:
      - 3306:3306 # HOST:CONTAINER
    environment:
      # - MYSQL_ROOT_PASSWORD
      # - MYSQL_USER=flask
      # - MYSQL_PASSWORD=devpassword
      # - MYSQL_DB=mysql
      - SECRET_KEY
      - SQLALCHEMY_DATABASE_URI
      - SQLALCHEMY_TRACK_MODIFICATIONS
    restart: always

  backend:
    container_name: backend
    build: .
      # entrypoint: sh -c "poetry show"
    # entrypoint: sh -c "poetry run python main.py collectstatic --no-input && poetry run flask db upgrade && poetry run gunicorn config.wsgi --workers=5 -b 0.0.0.0:8000"
    entrypoint: sh -c "poetry run python main.py && poetry run flask db upgrade && poetry run gunicorn config.wsgi --workers=5 -b 0.0.0.0:8000"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      # - django_media:/app/media/
      # - django_static:/app/static/
    environment:
      - SECRET_KEY
      - DEBUG
    depends_on:
      - postgres
    restart: always

  nginx:
    container_name : nginx
    image: nginx:1.23.2-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:rw
      # - django_media:/media/
      # - django_static:/static/
    depends_on:
      - backend
    restart: always
